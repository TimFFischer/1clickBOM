// Generated by CoffeeScript 1.6.3
(function() {
  var Retailer,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Retailer = (function() {
    function Retailer(name, country) {
      this.name = name + " " + country;
    }

    Retailer.prototype.clearCart = function(ref) {
      return console.log(ref.name + " cart cleared.");
    };

    return Retailer;

  })();

  this.InvalidCountryError = (function(_super) {
    __extends(InvalidCountryError, _super);

    function InvalidCountryError() {
      this.name = "InvalidCountryError";
      this.message = "Invalid country-code";
    }

    return InvalidCountryError;

  })(Error);

  this.Digikey = (function(_super) {
    __extends(Digikey, _super);

    function Digikey(country_code) {
      var country, data, error, xhr;
      xhr = new XMLHttpRequest();
      xhr.open("GET", chrome.extension.getURL("/data/digikey_international.json"), false);
      xhr.send();
      if (xhr.status === 200) {
        data = JSON.parse(xhr.responseText);
      }
      country = data.lookup[country_code];
      if (!country) {
        error = new InvalidCountryError();
        error.message += " \"" + country_code + "\" given to Digikey.";
        throw error;
      }
      this.site = data.sites[country];
      this.cart = data.carts[country];
      Digikey.__super__.constructor.call(this, "Digikey", country);
    }

    Digikey.prototype.clearCart = function() {
      var clear_url, that, xhr;
      that = this;
      if (/classic/.test(this.cart)) {
        clear_url = "https" + this.site + "/classic/Ordering/OrderingHome.aspx";
        return chrome.tabs.create({
          "url": clear_url,
          "active": false
        }, function(temp_tab) {
          var code;
          code = "document.forms[1].elements['ctl00_mainContentPlaceHolder_btnCreateNewOrder'].click();";
          return chrome.tabs.executeScript(temp_tab.id, {
            "code": code
          }, function() {
            var check_done, done;
            done = false;
            check_done = setInterval(function() {
              return chrome.tabs.get(temp_tab.id, function(temp_tab_after_execute) {
                var url;
                url = temp_tab_after_execute.url.split("?")[0];
                if (url === "https" + that.site + that.cart) {
                  chrome.tabs.remove(temp_tab_after_execute.id);
                  clearInterval(check_done);
                  chrome.tabs.query({
                    "url": "*" + that.site + "/classic/*rdering/*dd*art.aspx*"
                  }, function(tabs) {
                    var tab, _i, _len, _results;
                    _results = [];
                    for (_i = 0, _len = tabs.length; _i < _len; _i++) {
                      tab = tabs[_i];
                      _results.push(chrome.tabs.update(tab.id, {
                        "url": "https" + that.site + that.cart
                      }));
                    }
                    return _results;
                  });
                  done = true;
                  return console.log(that.name + " cart cleared.");
                }
              });
            }, 100);
            return setTimeout(function() {
              if (!done) {
                console.error(that.name + " cart clearing failed.");
                return clearInterval(check_done);
              }
            }, 5000);
          });
        });
      } else if (/ShoppingCartView/.test(this.cart)) {
        xhr = new XMLHttpRequest;
        xhr.open("POST", "https" + this.site + this.cart + "?explicitNewOrder=Y");
        xhr.onreadystatechange = function() {
          if (xhr.readyState === 4) {
            chrome.tabs.query({
              "url": "*" + that.site + that.cart + "*"
            }, function(tabs) {
              var tab, _i, _len, _results;
              _results = [];
              for (_i = 0, _len = tabs.length; _i < _len; _i++) {
                tab = tabs[_i];
                _results.push(chrome.tabs.update(tab.id, {
                  "url": "https" + that.site + that.cart
                }));
              }
              return _results;
            });
            return console.log(that.name + " cart cleared.");
          }
        };
        return xhr.send();
      }
    };

    Digikey.prototype.addItems = function(items) {
      var group, i, item, j, that, url, xhr, _, _i, _j, _k, _len, _len1, _len2, _results;
      that = this;
      if (/classic/.test(this.cart)) {
        _results = [];
        for (i = _i = 0, _len = items.length; _i < _len; i = ++_i) {
          item = items[i];
          xhr = new XMLHttpRequest;
          xhr.open("POST", "https" + this.site + this.cart + "?qty=" + item.quantity + "&part=" + item.part + "&cref=" + item.comment + i, true);
          xhr.onreadystatechange = function() {
            if (xhr.readyState === 4) {
              return chrome.tabs.query({
                "url": "*" + that.site + "/classic/*rdering/*dd*art.aspx*"
              }, function(tabs) {
                var tab, _j, _len1, _results1;
                _results1 = [];
                for (_j = 0, _len1 = tabs.length; _j < _len1; _j++) {
                  tab = tabs[_j];
                  _results1.push(chrome.tabs.update(tab.id, {
                    "url": "https" + that.site + that.cart
                  }));
                }
                return _results1;
              });
            }
          };
          _results.push(xhr.send());
        }
        return _results;
      } else if (/ShoppingCartView/.test(this.cart)) {
        for (i = _j = 0, _len1 = items.length; _j < _len1; i = _j += 20) {
          _ = items[i];
          group = items.slice(i, +(i + 19) + 1 || 9e9);
          xhr = new XMLHttpRequest;
          url = "https" + this.site + "/ordering/AddPart?";
          for (j = _k = 0, _len2 = group.length; _k < _len2; j = ++_k) {
            item = group[j];
            url += "&comment_" + (j + 1) + "=" + item.comment;
            url += "&quantity_" + (j + 1) + "=" + item.quantity;
            url += "&reportPartNumber_" + (j + 1) + "=" + item.part;
          }
          xhr.open("POST", url, false);
          xhr.send();
        }
        return chrome.tabs.query({
          "url": "*" + that.site + that.cart + "*"
        }, function(tabs) {
          var tab, _l, _len3, _results1;
          _results1 = [];
          for (_l = 0, _len3 = tabs.length; _l < _len3; _l++) {
            tab = tabs[_l];
            _results1.push(chrome.tabs.update(tab.id, {
              "url": "https" + that.site + that.cart
            }));
          }
          return _results1;
        });
      }
    };

    return Digikey;

  })(Retailer);

}).call(this);
